openapi: 3.0.0
info:
  title: API
  version: 1.0.0
  description: API
servers:
  - url: http://127.0.0.1:8000
paths:
  /v1/member/login:
    post:
      tags:
        - Member
      summary: Member login
      description: Normal Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: admin
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDY3OTMzMTJ9.YoSa8QjqZ8jUUhMWHzsNTsrgMt5YmxQuey0vBwTKV6s"
                  refresh_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDczOTA5MTJ9.8l9dcqj63c1RJfE8Bkb2X_eqs4TCn7qcAxI3PvjeqP4"
        '400':
          description: | 
            Login failed<br>
            [ error_code ENUM ]<br>
            missing-mandatory-parameter<br>
            invalid-username-or-password<br>
            [ errors ENUM ]<br>
            username<br>
            password<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/member/social-login:
    post:
      tags:
        - Member
      summary: Member social login
      description: Social Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - provider
                - token
              properties:
                provider:
                  type: integer
                  enum: [2, 3, 4]  # 2: KAKAO, 3: NAVER, 4: GOOGLE
                  example: 2
                token:
                  type: string
                  example: "gyYwO9GsLD30O1T7Sg"
      responses:
        '200':
          description: Social login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDY3OTMzMTJ9.YoSa8QjqZ8jUUhMWHzsNTsrgMt5YmxQuey0vBwTKV6s"
                  refresh_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDczOTA5MTJ9.8l9dcqj63c1RJfE8Bkb2X_eqs4TCn7qcAxI3PvjeqP4"
                  is_created:
                    type: boolean
                    example: true
        '400':
          description: | 
            Social Login failed<br>
            [ error_code ENUM ]<br>
            missing-mandatory-parameter<br>
            social-token-error<br>
            [ errors ENUM ]<br>
            provider<br>
            token<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/member/refresh-token:
    post:
      tags:
        - Member
      summary: Refresh access token
      description: Refreshes the access token using a refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDczOTI1NTZ9.PVuMlaXns3mUW9QYWuD1qa0Et66i1A0RgLby78hs90c"
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDY3OTQ5NTZ9.u9aHwyOhd_7arlbDGgmo-2j9LqKU3WK7VH5P0A6Q5C8"
                  refresh_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDczOTI1NTZ9.PVuMlaXns3mUW9QYWuD1qa0Et66i1A0RgLby78hs90c"
        '400':
          description: | 
            Refresh Token failed<br>
            [ error_code ENUM ]<br>
            missing-mandatory-parameter<br>
            [ errors ENUM ]<br>
            refresh_token<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

        '401':
          description: | 
            Social Login failed<br>
            [ error_code ENUM ]<br>
            invalid-refresh-token<br>
            [ errors ENUM ]<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/member/guest-token:
    post:
      tags:
        - Member
      summary: Generate guest token
      description: Generates a new access token and refresh token for a guest user
      responses:
        '200':
          description: Tokens generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6NCwibWVtYmVyX2lkIjpudWxsLCJleHAiOjE3MDY3OTU0MDJ9.OrdHI8qt6bVx343K6yg5wqmHSfGZ_c_t4GKFPdJ3Khg"
                  refresh_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6NCwibWVtYmVyX2lkIjpudWxsLCJleHAiOjE3MDczOTMwMDJ9.TJw6jktUuwWmgsc1MBmAtNKe15ASsLzJ4pgPNGtQX3g"

  /v1/member/sign-up-validation:
    post:
      tags:
        - Member
      summary: Validate user registration information
      description: Validates the given user registration information for uniqueness and conformity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - nickname
                - password1
                - password2
              properties:
                username:
                  type: string
                  example: "test"
                email:
                  type: string
                  format: email
                  example: "test@naver.com"
                nickname:
                  type: string
                  example: "test"
                password1:
                  type: string
                  example: "testtest"
                password2:
                  type: string
                  example: "testtest"
      responses:
        '200':
          description: Validation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "success"
        '400':
          description: | 
            SignUp Validation failed<br>
            [ error_code ENUM ]<br>
            missing-mandatory-parameter<br>
            invalid-sign-up-field-value<br>
            [ errors ENUM ]<br>
            username<br>
            email<br>
            nickname<br>
            password1<br>
            password2<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/member/sign-up-check:
    post:
      tags:
        - Member
      summary: Send verification code to email
      description: Validates user input and sends a verification code to the user's email if the input is valid.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - username
                - nickname
                - password2
              properties:
                email:
                  type: string
                  format: email
                  example: "test@naver.com"
                username:
                  type: string
                  example: "username"
                nickname:
                  type: string
                  example: "nickname"
                password2:
                  type: string
                  example: "password2"
      responses:
        '200':
          description: Verification code sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "인증번호를 이메일로 전송했습니다."

        '400':
          description: | 
            Error sending verification code or invalid input<br>
            [ error_code ENUM ]<br>
            missing-mandatory-parameter<br>
            sending-email-token-error<br>
            [ errors ENUM ]<br>
            email<br>
            username<br>
            nickname<br>
            password1<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/member/sign-up-validate-token:
    post:
      tags:
        - Member
      summary: Validate one-time token for email verification
      description: Validates the one-time token sent to the user's email as part of the registration process.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - one_time_token
              properties:
                email:
                  type: string
                  format: email
                  example: "test@naver.com"
                one_time_token:
                  type: string
                  example: "one_time_token"
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "회원가입에 성공했습니다."
        '400':
          description: | 
            Validation error or registration failure<br>
            [ error_code ENUM ]<br>
            missing-mandatory-parameter<br>
            member-creation-fail<br>
            email-token-macro-error<br>
            invalid-email-token<br>
            email-token-expired<br>
            [ errors ENUM ]<br>
            email<br>
            one_time_token<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/member/sign-up/job:
    post:
      tags:
        - Member
      summary: Get member's Job info when sign up
      description: |
        Get member's Job info.<br>
        This API is under development and not yet completed ![Under Construction](https://via.placeholder.com/150x30?text=Under+Construction)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpJobInformationPayload'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "success"
        '400':
          description: Error for selecting job
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '직무 선택 실패'
                    example: '직무 선택 실패했습니다..'
                  error_code:
                    $ref: '#/components/schemas/MemberSignUpJobErrorCode'

  /v1/member/my:
    get:
      tags:
        - Member
      summary: Get My profile info
      description: |
        Get My profile info<br>
        This API is under development and not yet completed ![Under Construction](https://via.placeholder.com/150x30?text=Under+Construction)
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileBlock'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

    put:
      tags:
        - Member
      summary: Update My profile info
      description: |
        Update My profile info<br>
        This API is under development and not yet completed ![Under Construction](https://via.placeholder.com/150x30?text=Under+Construction)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nickname
                - simple_description
                - link
                - profile_image
              properties:
                nickname:
                  type: string
                  example: "즐거운대게"
                simple_description:
                  type: string
                  example: "아아아아 즐거운 대게"
                  nullable: true
                link:
                  type: string
                  example: 'github.com'
                  nullable: true
                profile_image:
                  type: string
                  example: 'https://.....'
                  nullable: true

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "success"
        '400':
          description: Error for update profile
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '실패 내용'
                    example: '실패했습니다..'
                  error_code:
                    $ref: '#/components/schemas/UpdateProfileErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'



  /v1/product/point:
    get:
      tags:
        - Product
      summary: List points products with pagination
      description: Retrieve a paginated list of points products.
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
            default: 1
          description: Page number of the product listing.
        - in: query
          name: size
          required: true
          schema:
            type: integer
            default: 20
          description: Number of products per page.
      responses:
        '200':
          description: A list of points products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: integer
                          example: 1
                        product_type:
                          type: string
                          example: "POINT"
                        title:
                          type: string
                          example: "G-point 1000"
                        description:
                          type: string
                          example: "G-point 1000"
                        price:
                          type: integer
                          example: 1000
                        point:
                          type: integer
                          example: 1000
                        is_sold_out:
                          type: boolean
                          example: false
                        bought_count:
                          type: integer
                          example: 0
                        review_count:
                          type: integer
                          example: 0
                        review_rate:
                          type: number
                          format: float
                          example: 0.0

  /v1/payment/product/buy/kakao:
    post:
      tags:
        - Kakao Payment
      summary: Purchase a product using Kakao Pay
      description: Initiates a product purchase transaction using Kakao Pay.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - product_id
                - product_type
                - quantity
                - payment_type
                - order_phone_number
              properties:
                product_id:
                  type: integer
                  example: 1
                product_type:
                  type: string
                  enum: [POINT]
                  example: "POINT"
                quantity:
                  type: integer
                  example: 10
                payment_type:
                  type: string
                  enum: [KAKAO]
                  example: "KAKAO"
                order_phone_number:
                  type: string
                  example: "01074686889"
      responses:
        '200':
          description: Purchase initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  tid:
                    type: string
                    example: "T5bef4ed1c025b0f886f"
                  next_redirect_app_url:
                    type: string
                    example: "https://online-pay.kakao.com/mockup/v1/1061874fa483485aeaf2f25cc35faf7651fafc55fb5aedccbc5a3b38f2639146/aInfo"
                  next_redirect_mobile_url:
                    type: string
                    example: "https://online-pay.kakao.com/mockup/v1/1061874fa483485aeaf2f25cc35faf7651fafc55fb5aedccbc5a3b38f2639146/mInfo"
                  next_redirect_pc_url:
                    type: string
                    example: "https://online-pay.kakao.com/mockup/v1/1061874fa483485aeaf2f25cc35faf7651fafc55fb5aedccbc5a3b38f2639146/info"
        '400':
          description: Error due to invalid input or token format
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                invalid_token_format:
                  value:
                    message: "잘못된 토큰 형식입니다."
                invalid_input:
                  value:
                    message: "입력값을 다시 확인해주세요."

  /v1/payment/product/approve/kakao/{order_id}:
    get:
      tags:
        - Kakao Payment
      summary: Approve Kakao Pay payment
      description: Finalizes the payment process for an order using Kakao Pay.
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
          description: The order ID to be approved.
        - in: query
          name: pg_token
          required: true
          schema:
            type: string
          description: The pg_token obtained from Kakao Pay.
      responses:
        '200':
          description: Payment approved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "결제가 완료되었습니다."
        '400':
          description: Error due to invalid order or payment failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                non_existent_order:
                  value:
                    message: "존재하지 않는 주문입니다"
                payment_failure:
                  value:
                    message: "카카오페이 결제에 실패하였습니다."

  /v1/payment/product/cancel/kakao/{order_token}:
    post:
      tags:
        - Kakao Payment
      summary: Cancel Kakao Pay payment
      description: Cancels a payment process for an order using Kakao Pay.
      parameters:
        - in: path
          name: order_token
          required: true
          schema:
            type: string
          description: The order token of the payment to be canceled.
      responses:
        '200':
          description: Payment canceled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "결제가 취소되었습니다."
        '400':
          description: Error due to invalid input or other issues
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                invalid_input:
                  value:
                    message: "입력값을 다시 확인해주세요."
                non_existent_order:
                  value:
                    message: "존재하지 않는 주문입니다."
                already_cancelled:
                  value:
                    message: "이미 취소된 주문입니다."
                invalid_order_state:
                  value:
                    message: "주문의 상태가 유효하지 않습니다."
                kakao_pay_cancellation_failure:
                  value:
                    message: "카카오페이 결제 취소에 실패하였습니다."

  /v1/common/health-check:
    get:
      tags:
        - Common
      summary: Health Check API
      description: To check health check
      responses:
        '200':
          description: Health Check successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "OK"

  /v1/common/image/{type}/{pk}/url:
    get:
      tags:
        - Common
      summary: Give Presigned Url
      description: To upadte aws S3 image
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum: ['project-image', 'member-image']
          description: Type of constance_type
        - in: path
          name: pk
          required: true
          schema:
            type: string
          description: Type of constance_type
        - in: query
          name: file_name
          required: true
          schema:
            type: string
          description: file name
      responses:
        '200':
          description: Created Presigned URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: "https://s3-bucket-url.com"
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/common/job/type:
    get:
      tags:
        - Common
      summary: Get Job datas
      description: Get Job datas
      responses:
        '200':
          description: Health Check successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobConstanceTypeItemsResponse'

  /v1/common/{constance_type}/type:
    get:
      tags:
        - Common
      summary: Get constance type
      description: Get constance type
      parameters:
        - in: path
          name: constance_type
          required: true
          schema:
            type: string
            enum: ['job-category', 'member-attribute', 'project-category']
          description: Type of constance_type
      responses:
        '200':
          description: Health Check successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonConstanceTypeItemsResponse'

  /v1/payment/product/fail/kakao/{order_token}:
    post:
      tags:
        - Kakao Payment
      summary: Simulate Kakao Pay payment failure
      description: Marks a payment process as failed for an order using Kakao Pay.
      parameters:
        - in: path
          name: order_token
          required: true
          schema:
            type: string
          description: The order token of the payment to mark as failed.
      responses:
        '200':
          description: Payment marked as failed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "결제가 실패되었습니다."
        '400':
          description: Error due to invalid input or non-existent order
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                invalid_input:
                  value:
                    message: "입력값을 다시 확인해주세요."
                non_existent_order:
                  value:
                    message: "존재하지 않는 주문입니다."

  /v1/promotion/banners:
    get:
      tags:
        - Promotion
      summary: Get promotion banners
      operationId: getPromotionBanners
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Page number of the banner list.
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Number of banners per page.
        - name: target_layer
          in: query
          required: true
          schema:
            type: string
            enum:
              - HOME_TOP
          description: The target layer of the banners to retrieve.
      responses:
        '200':
          description: A list of promotion banners.
          content:
            application/json:
              schema:
                type: object
                properties:
                  banners:
                    type: array
                    items:
                      type: object
                      properties:
                        banner_id:
                          type: integer
                          nullable: false
                        title:
                          type: string
                          nullable: true
                        title_font_color:
                          type: string
                          nullable: true
                        description:
                          type: string
                          nullable: true
                        description_font_color:
                          type: string
                          nullable: true
                        background_color:
                          type: string
                          nullable: true
                        big_image:
                          type: string
                          nullable: true
                        middle_image:
                          type: string
                          nullable: true
                        small_image:
                          type: string
                          nullable: true
                        action_page:
                          type: string
                          nullable: true
                        target_pk:
                          type: string
                          nullable: true
                        target_type:
                          type: string
                          nullable: true
                        external_target_url:
                          type: string
                          nullable: true
                        tags:
                          type: array
                          items:
                            type: string
              examples:
                example-1:
                  value: {
                    "banners": [
                      {
                        "banner_id": 1,
                        "title": "Example Banner Title",
                        "title_font_color": "#FFFFFF",
                        "description": "Example Description",
                        "description_font_color": "#EEEEEE",
                        "background_color": "#000000",
                        "big_image": "https://example.com/big_image.jpg",
                        "middle_image": "https://example.com/middle_image.jpg",
                        "small_image": "https://example.com/small_image.jpg",
                        "action_page": "https://example.com/action_page",
                        "target_pk": "123",
                        "target_type": "Product",
                        "external_target_url": "https://example.com/external_url",
                        "tags": ["test_tag"]
                      }
                    ]
                  }
        '400':
          description: Bad request, missing or invalid parameters.
          content:
            application/json:
              examples:
                missing_target_layer:
                  value: {"message": "입력값을 다시 확인해주세요."}
                invalid_target_layer:
                  value: {"message": "잘못된 target_layer 입니다."}

  /v1/project/home:
    get:
      tags:
        - Project
      summary: Get List of Projects
      operationId: getProjects
      parameters:
        - name: next_cursor
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ProjectNextCursor'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: Number of banners per page.
        - name: title
          in: query
          required: false
          schema:
            type: string
          description: Search title of siple
          example: '사이플'
        - name: job_ids
          in: query
          required: false
          schema:
            type: string
          description: 직무별 아이디
          example: '1,2,3'
        - name: category_ids
          in: query
          required: false
          schema:
            type: string
          description: 카테고리 아이디
          example: '1,2,3'
        - name: jobs_operator
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ProjectJobOperator'
          description: OR 혹은 AND 조건으로 검색 여부
          example: 'OR'
        - name: experience
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ProjectExperienceType'
          description: 경력 여부
          example: 'ONLY_EXPERIENCE'
        - name: min_hours_per_week
          in: query
          required: false
          schema:
            type: integer
            example: 1
          description: 최소 주 N 시간
        - name: max_hours_per_week
          in: query
          required: false
          schema:
            type: integer
            example: 3
          description: 최대 주 N 시간
        - name: min_duration_month
          in: query
          required: false
          schema:
            type: integer
            example: 1
          description: 프로젝트 최소 유지 기간
          example: 1
        - name: max_duration_month
          in: query
          required: false
          schema:
            type: integer
            example: 3
          description: 프로젝트 최대 유지 기간
          example: 3
        - name: current_recruit_status
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ProjectMainLisFilterCurrentRecruitStatus'
          description: 값을 보내지 않으면 전체.
      responses:
        '200':
          description: A list of Projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProjectPaginatedItemsResponse'
        '400':
          description: List Searching Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHomeErrorResponse'

  /v1/project:
    post:
      tags:
        - Project
      summary: Create Project
      description: Create Project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - category_id
                - descritpion
                - hours_per_week
                - duration_month
                - image
                - jobs
                - experience
                - extra_information
              properties:
                title:
                  type: string
                  description: '프로젝트 제목'
                  example: '마인크래프트 같이 할 사람 구합니다~!'
                category_id:
                  type: integer
                  description: '카테고리 id'
                  example: 14
                descritpion:
                  type: string
                  description: '프로젝트 내용'
                  example: '야생 마인크래프트 같이 할 사람 구합니다~!'
                hours_per_week:
                  type: integer
                  description: '주 N 시간'
                  example: 14
                duration_month:
                  type: integer
                  description: '프로젝트 진행 개월'
                  example: 1
                image:
                  type: string
                  description: '프로젝트 배경 이미지'
                  example: 'https://이미지.com'
                  nullable: true
                jobs:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 'job 고유 id'
                        example: 1
                      total_limit:
                        type: integer
                        description: '역할을 구하려는 개수 1~10개'
                        example: 10
                experience:
                  $ref: '#/components/schemas/ProjectExperienceType'
                extra_information:
                  type: string
                  description: '번호 혹은 오카방 링크'
                  example: '010-XXXX-XXXX 혹은 오카방 입니다~'
                  nullable: true
      responses:
        '200':
          description: Created Project
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: integer
                    description: '생성된 사이드 프로젝트 id'
                    example: 1
        '400':
          description: Bad Request for information
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                  - errors
                properties:
                  message:
                    type: string
                    description: '어떠한 이유로 실패했는지'
                    example: '유효하지 않은 정보를 입력하여 생성에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectCreationErrorCode'
                  errors:
                    type: object
                    description: '에러 key value 에 맞춰서 대응'
                    properties:
                      category_id:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectCategoryIdCreationError'
                      title:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectTitleCreationError'
                      description:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectDescriptionCreationError'
                      hours_per_week:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectHoursPerWeekCreationError'
                      duration_month:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectDurationMonthCreationError'
                      jobs:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectJobsCreationError'
                      experience:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectExperienceCreationError'
                      extra_information:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectExtraInformationCreationError'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}:
    get:
      tags:
        - Project
      summary: Get Project
      description: Get Project
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: detail page for Project
      responses:
        '200':
          description: Detail Page can see
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
    put:
      tags:
        - Project
      summary: Update Project
      description: Update Project
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: update page for Project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - category_id
                - descritpion
                - hours_per_week
                - duration_month
                - image
                - experience
                - extra_information
              properties:
                title:
                  type: string
                  description: '프로젝트 제목'
                  example: '마인크래프트 같이 할 사람 구합니다~!'
                category_id:
                  type: integer
                  description: '카테고리 id'
                  example: 12
                descritpion:
                  type: string
                  description: '프로젝트 내용'
                  example: '야생 마인크래프트 같이 할 사람 구합니다~!'
                hours_per_week:
                  type: integer
                  description: '주 N 시간'
                  example: 14
                duration_month:
                  type: integer
                  description: '프로젝트 진행 개월'
                  example: 1
                image:
                  type: string
                  description: '프로젝트 배경 이미지'
                  example: 'https://이미지.com'
                  nullable: true
                experience:
                  $ref: '#/components/schemas/ProjectExperienceType'
                extra_information:
                  type: string
                  description: '번호 혹은 오카방 링크'
                  example: '010-XXXX-XXXX 혹은 오카방 입니다~'
                  nullable: true
      responses:
        '200':
          description: Updated Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: '수정된 프로젝트 id'
                    example: 1
        '400':
          description: Bad Request for information
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '어떠한 이유로 실패했는지'
                    example: '유효하지 않은 정보를 입력하여 생성에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectUpdatedErrorCode'
                  errors:
                    type: object
                    description: '에러 key value 에 맞춰서 대응'
                    properties:
                      category_id:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectCategoryIdUpdateError'
                      title:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectTitleUpdateError'
                      description:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectDescriptionUpdateError'
                      hours_per_week:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectHoursPerWeekUpdateError'
                      duration_month:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectDurationMonthUpdateError'
                      experience:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectExperienceUpdateError'
                      extra_information:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProjectExtraInformationUpdateError'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

    delete:
      tags:
        - Project
      summary: Delete Project
      operationId: deleteProject
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
      responses:
        '200':
          description: project delete success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '삭제 성공 내용'
                    example: '프로젝트 삭제에 성공했습니다.'
        '400':
          description: delete fail
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '삭제 실패 내용'
                    example: '프로젝트 삭제에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectDeleteErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/job/{job_id}/apply:
    post:
      tags:
        - Project
      summary: Apply Project Job
      description: Apply Project Job
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
        - in: path
          name: job_id
          required: true
          schema:
            type: integer
          description: job id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - description
              properties:
                description:
                  type: string
                  description: '지원 내용'
                  example: |
                    '저는 15년전 DS시절부터 닌텐도를 즐겨했으며 특히 동물의숲을 좋아했습니다. 현재도 모동숲을 즐기는 유저로서 사용자의 관점에서 개발할 수 있다는 장점이 있습니다. 잘 부탁드립니다.'
      responses:
        '200':
          description: Apply success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '지원 성공 내용'
                    example: '지원에 성공했습니다.'
        '400':
          description: Apply fail
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '지원 실패 내용'
                    example: '지원에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectJobApplyRequestErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/inprocess/application:
    get:
      tags:
        - Project
      summary: Get Recruit Application
      operationId: getProjectRecruitApplication
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: Get project id of ongoing Recruit Application
      responses:
        '200':
          description: A list of ongoing recruit application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitApplicationListItemsResponse'

        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/recruit-application/{project_recruit_application_id}/reply:
    post:
      tags:
        - Project
      summary: Reply Project Recruit Application
      operationId: resumeResult
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
        - in: path
          name: project_recruit_application_id
          required: true
          schema:
            type: integer
          description: project of recruit application id
      requestBody:
        content:
          application/json:
            schema:
              required:
                - action
              type: object
              properties:
                action:
                  $ref: '#/components/schemas/ProjectApplicationReply'
      responses:
        '200':
          description: recruit application reply success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '응답 성공 내용'
                    example: '지원서에 응답했습니다.'
        '400':
          description: reply fail
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '응답에 실패 내용'
                    example: '응답에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectRecruitApplicationReplyErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/start:
    post:
      tags:
        - Project
      summary: Project Start
      description: Project Start
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project start
      responses:
        '200':
          description: start success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '시작 성공 내용'
                    example: '시작에 성공했습니다.'
        '400':
          description: Start fail
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '시작 실패 내용'
                    example: '시작에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectStartErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/leave:
    post:
      tags:
        - Project
      summary: Project Leave
      description: Project Leave
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
      responses:
        '200':
          description: making Leave
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '프로젝트 탈주 성공'
                    example: '프로젝트 탈주 성공했습니다.'
        '400':
          description: Fail Leave
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '프로젝트 탈주 실패 내용'
                    example: '프로젝트 탈주 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectLeaveErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/fail:
    post:
      tags:
        - Project
      summary: Project Fail
      description: Project Fail
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
      responses:
        '200':
          description: making fail success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '실패로 전환 성공 내용'
                    example: '실패에 성공했습니다.'
        '400':
          description: Fail failed
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '실패처리 실패 내용'
                    example: '실패처리에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectFailErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/finish:
    post:
      tags:
        - Project
      summary: Project Finish
      description: Project Finish
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project finish
      responses:
        '200':
          description: finish success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '종료 성공 내용'
                    example: '종료에 성공했습니다.'
        '400':
          description: finish fail
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '종료 실패 내용'
                    example: '종료에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectFinishErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/transfer-leader:
    post:
      tags:
        - Project
      summary: Project Leader Transfer
      description: Project Leader Transfer
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transfer_member_id
              properties:
                transfer_member_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Leader transfer
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '리더를 위임하는 성공 내용'
                    example: '리더 위임에 성공했습니다.'
        '400':
          description: Fail transfer leader
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '리더 위임 실패 내용'
                    example: '리더 위임에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectTrasferLeaderErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/ban:
    post:
      tags:
        - Project
      summary: Ban Request member
      description: Ban Request member
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ban_member_id
                - reason
              properties:
                ban_member_id:
                  type: integer
                  example: 1
                reason:
                  type: string
                  example: '욕설을 많이 했습니다.'
      responses:
        '200':
          description: Ban Request member
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '밴 요청 성공 내용'
                    example: '밴 요청에 성공했습니다.'
        '400':
          description: Ban Request member Fail
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '밴 요청 실패 내용'
                    example: '밴 요청에 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectBanRequestErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/{project_id}/extra-recruit:
    post:
      tags:
        - Project
      summary: Extra recruit
      description: Extra recruit
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraRecruitPayload'
      responses:
        '200':
          description: Success Create Extra recruit
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '성공 내용'
                    example: '성공했습니다.'
        '400':
          description: Fail Create Extra recruit
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '실패 내용'
                    example: '실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectExtraRecruitErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/my/ongoing:
    get:
      tags:
        - My Project
      summary: Get Member currently active List of Projects
      operationId: getActiveProjects
      responses:
        '200':
          description: A list of Projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyDoingProjectItemsResponse'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/my/bookmark:
    get:
      tags:
        - My Project
      summary: Get Bookmarked Projects
      operationId: getBookmarkedProjects
      responses:
        '200':
          description: A list of Bookmarked Projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyBookmarkProjectItemsResponse'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/my:
    get:
      tags:
        - My Project
      summary: Get Member currently active List of Projects
      operationId: getMyProjects
      parameters:
        - name: next_cursor
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ProjectNextCursor'
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: Number of size.
        - name: category_ids
          in: query
          required: false
          schema:
            type: string
          description: 카테고리 id 들
          example: '1,2,3'
        - name: title
          in: query
          required: false
          schema:
            type: string
          description: Search title of siple
          example: '사이플'
        - name: jobs
          in: query
          required: false
          schema:
            type: string
          description: 직무별
          example: 'FE,BE'
        - name: experience
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ProjectExperienceType'
          description: 경력 여부
          example: 'ONLY_EXPERIENCE'
        - name: min_hours_per_week
          in: query
          required: false
          schema:
            type: integer
          description: '최소 주 N 시간'
          example: 1
        - name: max_hours_per_week
          in: query
          required: false
          schema:
            type: integer
          description: '최대 주 N 시간'
          example: 4
        - name: min_duration_month
          in: query
          required: false
          schema:
            type: integer
          description: 최소 프로젝트 기간
          example: 1
        - name: max_duration_month
          in: query
          required: false
          schema:
            type: integer
          description: 최대 프로젝트 기간
          example: 4
        - name: project_result_status
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ProjectResultStatus'
          description: 프로젝트 상태
          example: 'SUCCESS'
      responses:
        '200':
          description: A My Projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyProjectItemsResponse'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/my/{project_id}/team-member:
    get:
      tags:
        - My Project
      summary: Get Members of my specific team
      operationId: getProjectTeamMember
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
      responses:
        '200':
          description: List of Team Members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberListItemsResponse'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/my/{project_id}/give-attribute:
    post:
      tags:
        - My Project
      summary: Give Members of Attribute
      operationId: giveProjectTeamMemberAttribute
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
          description: project id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiveAttributeTeamMemberPayload'
      responses:
        '200':
          description: List of Team Members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberListItemsResponse'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/my/recruit-application:
    get:
      tags:
        - My Project
      summary: Get my recruit application
      operationId: getRecruitApplication
      responses:
        '200':
          description: List of my applied recruit application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyRecruitApplicationListItemsResponse'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

  /v1/project/my/recruit-application/{project_recruit_application_id}/cancel:
    post:
      tags:
        - My Project
      summary: Cancel recruit application
      operationId: cancelRecruitApplication
      parameters:
        - in: path
          name: project_recruit_application_id
          required: true
          schema:
            type: integer
          description: project_recruit_application_id
      responses:
        '200':
          description: cancel success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: '지원 취소 성공 내용'
                    example: '지원 취소 성공했습니다.'
        '400':
          description: cancel fail
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                    description: '지원 취소 실패 내용'
                    example: '지원 취소 실패했습니다.'
                  error_code:
                    $ref: '#/components/schemas/ProjectRecruitApplicationCancelErrorCode'
        '403':
          description: No Auth
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotUserAuthPermission'

components:
  schemas:
    UpdateProfileErrorCode:
      type: string
      enum:
        - '400-profile_update-00001'  # 닉네임 중복
        - '400-profile_update-00002'  # 어쩌고 저쩌고

    ProjectExtraRecruitErrorCode:
      type: string
      enum:
        - '400-project_extra_recruit-00001'  # 없는 프로젝트
        - '400-project_extra_recruit-00002'  # 권한이 없는 유저
        - '400-project_extra_recruit-00003'  # 할 수 없는 프로젝트 상태

    ProjectBanRequestErrorCode:
      type: string
      enum:
        - '400-project_ban-00001'  # 프로젝트에 없는 유저
        - '400-project_ban-00002'  # 밴 사유가 너무 김

    MemberSignUpJobErrorCode:
      type: string
      enum:
        - '400-member_sign_up_job-00001'  # 유효하지 않게 생성하는 경우

    ProjectRecruitApplicationCancelErrorCode:
      type: string
      enum:
        - '400-project_recruit_application_cancel-00001' # 이미 취소 한 경우

    ProjectLeaveErrorCode:
      type: string
      enum:
        - '400-project_leave-00001' # 해당 프로젝트에 참가하지 않은 경우
        - '400-project_leave-00002' # 이미 탈주한 경우
        - '400-project_leave-00003' # 프로젝트 탈주를 할 수 없는 프로젝트 상태인경우

    ProjectTrasferLeaderErrorCode:
      type: string
      enum:
        - '400-tranfer_leader-00001'  # 프로젝트에 없는 유저로 위임하려는 경우
        - '400-tranfer_leader-00002'  # 리더가 아니면서 위임하려고 하는 경우

    ProjectFailErrorCode:
      type: string
      enum:
        - '400-project_fail-00001' # 실패할 수 없는 status 에서 실패하려고 하는 경우

    ProjectStartErrorCode:
      type: string
      enum:
        - '400-project_start-00001' # 시작하지 못하는 status 에서 시작하려는 경우

    ProjectFinishErrorCode:
      type: string
      enum:
        - '400-project_finish-00001' # 종료하지 못하는 status 에서 시작하려는 경우

    ProjectDeleteErrorCode:
      type: string
      enum:
        - '400-project_delete-00001'  # 팀원이 존재하는 경우
        - '400-project_delete-00002'  # 프로젝트가 이미 시작한 경우

    ProjectRecruitApplicationReplyErrorCode:
      type: string
      enum:
        - '400-project_recruit_application_reply-00001'  # 이미 지원자가 꽉 찼습니다.

    ProjectJobApplyRequestErrorCode:
      type: string
      enum:
        - '400-project_resume-00001'  # 현재 나의 진행중인 프로젝트가 많음
        - '400-project_resume-00002'  # 이미 전부 지원이 종료됨

    ProjectCreationErrorCode:
      type: string
      enum:
        - '400-project_creation-00001'  # Input 값 오류 생성 오류

    ProjectUpdatedErrorCode:
      type: string
      enum:
        - '400-project_update-00001'  # Input 값 오류 수정 오류

    NotUserAuthPermission:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: '오류 메시지'
          example: '로그인 후 이용해주세요.'

    ProjectTitleCreationError:
      type: string
      description: 'title 이 어떠한 이유로 실패했는지'
      example: '100 글자를 넘었습니다.'

    ProjectDescriptionCreationError:
      type: string
      description: 'description 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectHoursPerWeekCreationError:
      type: string
      description: 'hours_per_week 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectCategoryIdCreationError:
      type: string
      description: 'category_id 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectDurationMonthCreationError:
      type: string
      description: 'duration_month 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectJobsCreationError:
      type: string
      description: 'jobs 가 어떠한 이유로 실패했는지'
      example: '직종은 1~10 명 까지 입력 가능합니다.'

    ProjectExperienceCreationError:
      type: string
      description: 'experience 가 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectExtraInformationCreationError:
      type: string
      description: 'extra_information 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectCategoryIdUpdateError:
      type: string
      description: 'category_id 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectTitleUpdateError:
      type: string
      description: 'title 이 어떠한 이유로 실패했는지'
      example: '100 글자를 넘었습니다.'

    ProjectDescriptionUpdateError:
      type: string
      description: 'description 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectHoursPerWeekUpdateError:
      type: string
      description: 'hours_per_week 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectDurationMonthUpdateError:
      type: string
      description: 'duration_month 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectExperienceUpdateError:
      type: string
      description: 'experience 가 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectExtraInformationUpdateError:
      type: string
      description: 'extra_information 이 어떠한 이유로 실패했는지'
      example: '유효하지 않은 무언가가 들어갔습니다.'

    ProjectApplicationReply:
      type: string
      enum: ['ACCEPT', 'DENY']
      example: 'ACCEPT'

    ProjectNextCursor:
      type: string
      nullable: true
      description: |
        다음 데이터를 가져오기 위한 token (정렬은 rearrangement_time, id 최신순으로 합니다)<br>
        next_cursor 의 값은 rearrangement_time, id 의 값을 json 후 base64 url-safe 인코딩 합니다.
      example: 'eyJvcmRlcmluZ190aW1lIjogIjIwMjQtMDEtMTQiLCAiaWQiOiAzfQ=='

    ProjectCurrentRecruitStatus:
      type: string
      enum: ['RECRUITING', 'ADDITIONAL_RECRUITING', 'RECRUITED']
      description: 프로젝트 상태가 모집중, 진행중(추가 모집)
      example: 'RECRUITING'

    ProjectMainLisFilterCurrentRecruitStatus:
      type: string
      enum: ['RECRUITING', 'RECRUITED']
      description: 프로젝트 상태가 모집중
      example: 'RECRUITING'

    ProfileBlock:
      type: object
      required:
            - id
            - profile_image
            - nickname
            - simple_description
            - member_main_attribute
            - member_job_experience
            - project_info
            - link
      properties:
        id:
          type: integer
          description: 맴버 id
          example: 1
        profile_image:
          type: string
          description: '프로필 사진'
          nullable: true
          example: 'https://프로필_이미지.com'
        nickname:
          type: string
          description: '닉네임'
          example: 'SIPLE_DEV'
        simple_description:
          type: string
          description: '한줄 소개'
          nullable: true
          example: '사이플 관리자 입니다.'
        member_main_attribute:
          type: array
          items:
            type: object
            required:
              - id
              - display_name
              - name
            properties:
              id:
                type: integer
                description: '성격 id'
                example: 1
              name:
                type: string
                description: '고유 name'
                example: 'kind'
              display_name:
                type: string
                description: '사용자에게 보여주는 성격 정보'
                example: '친절해요'
        member_job_experience:
          type: array
          items:
            type: object
            required:
              - id
              - display_name
              - year
              - month
            properties:
              id:
                type: integer
                description: 'Job id'
                example: 1
              display_name:
                type: string
                description: '사용자에게 보여주는 직업 정보'
                example: '백엔드'
              year:
                type: integer
                description: '연차'
                example: 2
              month:
                type: integer
                description: '개월'
                example: 4
        project_info:
          type: object
          required:
            - success
            - working
            - leaved
          properties:
            success:
              type: integer
              description: '성공한 프로젝트 개수'
              example: 3
            working:
              type: integer
              description: '진행중인 프로젝트 개수'
              example: 1
            leaved:
              type: integer
              description: '탈주한 프로젝트 개수'
              example: 1
        link:
          type: string
          description: '링크'
          nullable: true
          example: 'github.com/extra'


    ProjectExperienceType:
      type: string
      enum: ['ALL', 'ONLY_EXPERIENCE']
      example: 'ONLY_EXPERIENCE'

    ProjectJobOperator:
      type: string
      enum: ['OR', 'AND']
      example: 'OR'

    MainProjectListItem:
      type: object
      required:
        - id
        - title
        - simple_description
        - jobs
        - experience
        - hours_per_week
        - current_recruit_status
        - image
        - is_bookmarked
        - bookmark_count
        - recent_recruited_at
      properties:
        id:
          type: integer
          description: '아이템의 고유 ID'
          example: 1
        category_display_name:
          type: string
          description: '카테고리 이름'
          example: '재미 / 커뮤니티'
        title:
          type: string
          description: '프로젝트 title'
          example: '오버워치 전적 공유 사이트 만듭시다!'
        simple_description:
          type: string
          description: '프로젝트 description (100글자 정도 컷?)'
          example: '오버워치 전적 공유 사이트 만듭시다! 어이어이 ~'
        jobs:
          type: array
          items:
            type: object
            required:
              - id
              - display_name
              - is_available
            properties:
              id:
                type: integer
                description: '직종 고유 ID'
                example: 1
              display_name:
                type: string
                description: '사용자에게 보여주는 정보'
                example: '프론트엔드'
              is_available:
                type: boolean
                description: '직무의 마감 여부 / 직무 마감시 비활성화 표시'
                example: True
        experience:
          $ref: '#/components/schemas/ProjectExperienceType'
        hours_per_week:
          type: integer
          example: 1
          nullable: true
        current_recruit_status:
          $ref: '#/components/schemas/ProjectCurrentRecruitStatus'
        image:
          type: string
          description: '이미지 사진'
          example: 'https://이미지.이미지'
          nullable: true
        is_bookmarked:
          type: boolean
          description: '북마크 설정 여부'
          example: false
        bookmark_count:
          type: integer
          description: '북마크 개수'
          example: 40
        recent_recruited_at:
          type: string
          description: '마지막 공고 일자'
          example: '2024-01-01T00:00:00Z'

    ExtraRecruitPayload:
      type: object
      required:
        - jobs
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/ExtraRecruitJobData'

    ExtraRecruitJobData:
      type: object
      required:
        - id
        - total_limit
      properties:
        id:
          type: integer
          description: job pk
          example: 1
        total_limit:
          type: integer
          description: '기존 맴버수와 더해서 10명 이하로 신규 구직'
          example: 3

    SignUpJobInformationPayload:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SignUpJobInformation'

    SignUpJobInformation:
      type: object
      required:
        - job_id
        - job_experience
        - experience_start_date
        - experience_end_date
        - is_working
      properties:
        job_id:
          type: integer
          description: job pk
          example: 1
        job_experience:
          type: string
          enum: ['NEWBIE', 'EXPERIENCE']
          example: 'NEWBIE'
        experience_start_date:
          type: string
          description: '경력 시작 일자'
          nullable: true
          example: '2024-04-01'
        experience_end_date:
          type: string
          description: '경력 종료 일자'
          nullable: true
          example: '2024-04-030'
        is_working:
          type: boolean
          description: '재직중'
          example: true

    JobConstanceTypeItemsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobConstanceTypeItem'

    JobConstanceTypeItem:
      type: object
      required:
        - id
        - name
        - display_name
        - category_id
        - category_name
      properties:
        id:
          type: integer
          description: type pk
          example: 1
        name:
          type: string
          description: searching for wording
          example: Frontend
        display_name:
          type: string
          description: What user will see
          example: '프론트엔더'
        category_id:
          type: integer
          description: Job category id for search
          example: 1
        category_name:
          type: string
          description: Job category what user will see
          example: '개발'

    CommonConstanceTypeItemsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CommonConstanceTypeItem'

    CommonConstanceTypeItem:
      type: object
      required:
        - id
        - name
        - display_name
      properties:
        id:
          type: integer
          description: type pk
          example: 1
        name:
          type: string
          description: searching for wording
          example: Frontend
        display_name:
          type: string
          description: What user will see
          example: '프론트엔더'

    MainProjectPaginatedItemsResponse:
      type: object
      required:
        - data
        - next_cursor
        - has_more
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MainProjectListItem'
        next_cursor:
          $ref: '#/components/schemas/ProjectNextCursor'
        has_more:
          type: boolean
          description: '더 많은 데이터가 있는지 여부'
          example: true

    MyDoingProjectListItem:
      type: object
      required:
        - id
        - category_display_name
        - title
        - simple_description
        - jobs
        - experience
        - hours_per_week
        - current_recruit_status
        - image
        - is_bookmarked
        - is_leader
        - is_editable
        - is_member_manageable
        - is_resume_manageable
        - bookmark_count
        - recent_recruited_at
      properties:
        id:
          type: integer
          description: '프로젝트 고유 ID'
          example: 1
        category_display_name:
          type: string
          description: '카테고리 이름'
          example: '재미 / 커뮤니티'
        title:
          type: string
          description: '프로젝트 title'
          example: '오버워치 전적 공유 사이트 만듭시다!'
        simple_description:
          type: string
          description: '프로젝트 description (100글자 정도 컷?)'
          example: '오버워치 전적 공유 사이트 만듭시다! 어이어이 ~'
        jobs:
          type: array
          items:
            type: object
            required:
              - id
              - display_name
              - is_available
            properties:
              id:
                type: integer
                description: '직종 고유 ID'
                example: 1
              display_name:
                type: string
                description: '사용자에게 보여주는 정보'
                example: '프론트엔드'
              is_available:
                type: boolean
                description: '직무의 마감 여부 / 직무 마감시 비활성화 표시'
                example: True
        experience:
          $ref: '#/components/schemas/ProjectExperienceType'
        hours_per_week:
          type: integer
          description: '주 N 시간'
          example: 14
          nullable: true
        current_recruit_status:
          $ref: '#/components/schemas/ProjectCurrentRecruitStatus'
        image:
          type: string
          description: '이미지 사진'
          nullable: true
          example: 'https://이미지.이미지'
        is_bookmarked:
          type: boolean
          description: '북마크 설정 여부'
          example: false
        is_leader:
          type: boolean
          description: '프로젝트 리더 여부'
          example: true
        is_editable:
          type: boolean
          description: '프로젝트 수정 여부'
          example: true
        is_member_manageable:
          type: boolean
          description: '프로젝트 팀원 관리 가능 여부'
          example: true
        is_resume_manageable:
          type: boolean
          description: '프로젝트 지원서 관리 가능 여부'
          example: true
        bookmark_count:
          type: integer
          description: '북마크 개수'
          example: 40
        recent_recruited_at:
          type: string
          description: '마지막 공고 일자'
          example: '2024-01-01T00:00:00Z'

    MyBookmarkProjectItemsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MyBookmarkProjectItem'

    MyBookmarkProjectItem:
      type: object
      required:
        - id
        - category_display_name
        - title
        - simple_description
        - jobs
        - experience
        - hours_per_week
        - project_result_status
        - image
        - is_bookmarked
        - is_leader
        - is_member_manageable
        - bookmark_count
        - recent_recruited_at
      properties:
        id:
          type: integer
          description: '프로젝트 고유 ID'
          example: 1
        category_display_name:
          type: string
          description: '카테고리 이름'
          example: '재미 / 커뮤니티'
        title:
          type: string
          description: '프로젝트 title'
          example: '오버워치 전적 공유 사이트 만듭시다!'
        simple_description:
          type: string
          description: '프로젝트 description (100글자 정도 컷?)'
          example: '오버워치 전적 공유 사이트 만듭시다! 어이어이 ~'
        jobs:
          type: array
          items:
            type: object
            required:
              - id
              - display_name
              - is_available
            properties:
              id:
                type: integer
                description: '직종 고유 ID'
                example: 1
              display_name:
                type: string
                description: '사용자에게 보여주는 정보'
                example: '프론트엔드'
              is_available:
                type: boolean
                description: '직무의 마감 여부 / 직무 마감시 비활성화 표시'
                example: True
        experience:
          $ref: '#/components/schemas/ProjectExperienceType'
        hours_per_week:
          type: integer
          description: '주 N 시간'
          example: 14
          nullable: true
        project_result_status:
          $ref: '#/components/schemas/ProjectResultStatus'
        image:
          type: string
          description: '이미지 사진'
          nullable: true
          example: 'https://이미지.이미지'
        is_bookmarked:
          type: boolean
          description: '북마크 설정 여부'
          example: false
        is_leader:
          type: boolean
          description: '프로젝트 리더 여부'
          example: true
        is_member_manageable:
          type: boolean
          description: '프로젝트 팀원 관리 가능 여부'
          example: true
        bookmark_count:
          type: integer
          description: '북마크 개수'
          example: 40
        recent_recruited_at:
          type: string
          description: '마지막 공고 일자'
          example: '2024-01-01T00:00:00Z'

    MyDoingProjectItemsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MyDoingProjectListItem'

    MyProjectListItem:
      type: object
      required:
        - id
        - category_display_name
        - title
        - simple_description
        - jobs
        - experience
        - hours_per_week
        - project_result_status
        - image
        - is_bookmarked
        - is_leader
        - is_member_manageable
        - is_member_evaluatable
        - bookmark_count
        - recent_recruited_at
      properties:
        id:
          type: integer
          description: '프로젝트 고유 ID'
          example: 1
        category_display_name:
          type: string
          description: '카테고리 이름'
          example: '재미 / 커뮤니티'
        title:
          type: string
          description: '프로젝트 title'
          example: '오버워치 전적 공유 사이트 만듭시다!'
        simple_description:
          type: string
          description: '프로젝트 description (100글자 정도 컷?)'
          example: '오버워치 전적 공유 사이트 만듭시다! 어이어이 ~'
        jobs:
          type: array
          items:
            type: object
            required:
              - id
              - display_name
              - is_available
            properties:
              id:
                type: integer
                description: '직종 고유 ID'
                example: 1
              display_name:
                type: string
                description: '사용자에게 보여주는 정보'
                example: '프론트엔드'
              is_available:
                type: boolean
                description: '직무의 마감 여부 / 직무 마감시 비활성화 표시'
                example: True
        experience:
          $ref: '#/components/schemas/ProjectExperienceType'
        hours_per_week:
          type: integer
          description: '주 N 시간'
          example: 14
          nullable: true
        project_result_status:
          $ref: '#/components/schemas/ProjectResultStatus'
        image:
          type: string
          description: '이미지 사진'
          nullable: true
          example: 'https://이미지.이미지'
        is_bookmarked:
          type: boolean
          description: '북마크 설정 여부'
          example: false
        is_leader:
          type: boolean
          description: '프로젝트 리더 여부'
          example: true
        is_member_manageable:
          type: boolean
          description: '프로젝트 팀원 관리 가능 여부'
          example: true
        is_member_evaluatable:
          type: boolean
          description: '프로젝트 팀원 평가 가능 여부'
          example: true
        bookmark_count:
          type: integer
          description: '북마크 개수'
          example: 40
        recent_recruited_at:
          type: string
          description: '마지막 공고 일자'
          example: '2024-01-01T00:00:00Z'

    MyProjectItemsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MyProjectListItem'

    RecruitApplicationListItem:
      type: object
      required:
        - application_id
        - job_display_name
        - request_message
        - member_info
      properties:
        application_id:
          type: integer
          description: '지원서 ID'
          example: 1
        job_display_name:
          type: string
          description: '직종 이름'
          example: '프론트엔드'
        request_message:
          type: string
          description: '지원할 때 쓴 내용'
          example: '지원하겠습니다~'
        member_info:
          $ref: '#/components/schemas/ProfileBlock'

    RecruitApplicationListItemsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RecruitApplicationListItem'

    MyRecruitApplicationListItemsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MyRecruitApplicationListItem'

    MyRecruitApplicationListItem:
      type: object
      required:
        - project_id
        - application_id
        - application_description
        - application_status
        - category_display_name
        - application_job_display_name
        - title
        - simple_description
        - jobs
        - experience
        - hours_per_week
        - current_project_status
        - image
        - is_bookmarked
        - bookmark_count
        - recent_recruited_at
      properties:
        project_id:
          type: integer
          description: '프로젝트 고유 ID'
          example: 1
        application_id:
          type: integer
          description: '지원서의 id'
          example: 1
        application_description:
          type: string
          description: '지원 내용'
          example: '지원한 계기는 ....'
        application_status:
          type: string
          description: '지원 상태'
          enum: ['IN_REVIEW', 'ACCEPTED', 'REJECTED']
          example: 'IN_REVIEW'
        category_display_name:
          type: string
          description: '카테고리 이름'
          example: '재미 / 커뮤니티'
        application_job_display_name:
          type: string
          description: '지원 직무'
          example: '프론트엔드'
        title:
          type: string
          description: '프로젝트 title'
          example: '오버워치 전적 공유 사이트 만듭시다!'
        simple_description:
          type: string
          description: '프로젝트 description (100글자 정도 컷?)'
          example: '오버워치 전적 공유 사이트 만듭시다! 어이어이 ~'
        jobs:
          type: array
          items:
            type: object
            required:
              - id
              - display_name
              - is_available
            properties:
              id:
                type: integer
                description: '직종 고유 ID'
                example: 1
              display_name:
                type: string
                description: '사용자에게 보여주는 정보'
                example: '프론트엔드'
              is_available:
                type: boolean
                description: '직무의 마감 여부 / 직무 마감시 비활성화 표시'
                example: True
        experience:
          $ref: '#/components/schemas/ProjectExperienceType'
        hours_per_week:
          type: integer
          description: '주 N 시간'
          example: 14
          nullable: true
        current_project_status:
          type: string
          description: '진행중인지'
          enum: ['WORKING', 'WAITING']
          example: 'WORKING'
        image:
          type: string
          description: '이미지 사진'
          nullable: true
          example: 'https://이미지.이미지'
        is_bookmarked:
          type: boolean
          description: '북마크 설정 여부'
          example: false
        bookmark_count:
          type: integer
          description: '북마크 개수'
          example: 40
        recent_recruited_at:
          type: string
          description: '마지막 공고 일자'
          example: '2024-01-01T00:00:00Z'

    GiveAttributeTeamMemberPayload:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GiveAttributeTeamMemberData'

    GiveAttributeTeamMemberData:
      type: object
      required:
        - member_id
        - member_attribute_id
      properties:
        member_id:
          type: integer
          description: '맴버 id'
          example: 1
        member_attribute_id:
          type: integer
          description: '성격 id'
          nullable: true
          example: 1

    TeamMemberListItemsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberListItem'

    TeamMemberListItem:
      type: object
      required:
        - job_display_name
        - member_info
      properties:
        job_display_name:
          type: string
          description: '직종 이름'
          example: '프론트엔드'
        member_info:
          $ref: '#/components/schemas/ProfileBlock'

    ProjectDetail:
      type: object
      required:
        - id
        - category_display_name
        - title
        - description
        - duration_month
        - hours_per_week
        - extra_information
        - jobs
        - experience
        - status_display_name
        - image
        - leader_info
        - bookmark_count
        - first_recruited_at
        - recent_recruited_at
      properties:
        id:
          type: integer
          description: '아이템의 고유 ID'
          example: 1
        category_display_name:
          type: string
          description: '카테고리 이름'
          example: '재미 / 커뮤니티'
        title:
          type: string
          description: '프로젝트 title'
          example: '오버워치 전적 공유 사이트 만듭시다!'
        description:
          type: string
          description: '프로젝트 description (100글자 정도 컷?)'
          example: '오버워치 전적 공유 사이트 만듭시다! 어이어이 ~'
        duration_month:
          type: integer
          description: '프로젝트 진행 기간'
          example: 2
        hours_per_week:
          type: integer
          description: '주 N 시간'
          example: 14
          nullable: true
        extra_information:
          type: string
          description: '오카방 정보 및 핸드폰 정보'
          example: '010-3123-1234'
        jobs:
          type: array
          items:
            type: object
            required:
              - id
              - display_name
              - is_available
            properties:
              id:
                type: integer
                description: '직종 고유 ID'
                example: 1
              display_name:
                type: string
                description: '사용자에게 보여주는 정보'
                example: '프론트엔드'
              is_available:
                type: boolean
                description: |
                  '직무의 마감 여부 / 직무 마감시 비활성화 표시 (혹은 경력 입력 안된 사람 지원 불가)'
                example: True
        experience:
          $ref: '#/components/schemas/ProjectExperienceType'
        status_display_name:
          $ref: '#/components/schemas/ProjectDetailStatusDisplayName'
        image:
          type: string
          description: '이미지 사진'
          nullable: true
          example: 'https://이미지.이미지'
        leader_info:
          $ref: '#/components/schemas/ProfileBlock'
        bookmark_count:
          type: integer
          description: '북마크 개수'
          example: 40
        recent_recruited_at:
          type: string
          description: '마지막 공고 일자'
          example: '2024-05-01T00:00:00Z'
        first_recruited_at:
          type: string
          description: '처음 공고 일자'
          example: '2024-04-01T00:00:00Z'

    ProjectResultStatus:
      type: string
      enum: ['FAIL', 'SUCCESS', 'LEFT']

    ProjectDetailStatusDisplayName:
      type: string
      enum: ['모집중', '진행중', '완료', '실패', '삭제']
      example: '진행중'

    ProjectHomeErrorResponse:
      type: object
      required:
        - message
        - error_code
        - errors
      properties:
        message:
          type: string
          description: "큰 에러 범주"
          example: "유효하지 않은 입력값입니다."
        error_code:
          type: string
          description: "큰 에러 코드"
          example: "400-invalid_home_list_input_error-00001"
        errors:
          type: object
          nullable: true
          description: "에러의 디테일한 문제 점"
          additionalProperties:
            type: array
            items:
              type: string
          example:
            min_hours_per_week:
              - "min_hours_per_week 값은 max_hours_per_week 보다 작아야합니다."
            max_hours_per_week:
              - "max_hours_per_week 값은 min_hours_per_week 보다 커야합니다."

    ErrorResponse:
      type: object
      required:
        - message
        - error_code
        - errors
      properties:
        message:
          type: string
          description: "큰 에러 범주"
          example: "유효하지 않은 입력값입니다."
        error_code:
          type: string
          description: "큰 에러 코드"
          example: "invalid-username-or-password"
        errors:
          type: object
          nullable: true
          description: |
            "에러의 디테일한 문제점<br>"
          additionalProperties:
            type: array
            items:
              type: string
          example:
            어떠한필드정보1:
              - "어떠한 필드1 입력값을 확인해주세요."
            어떠한필드정보2:
              - "어떠한 필드2 입력값을 확인해주세요."

    UsernameSignUpErrors:
      type: string
      enum:
        - "이미 사용중인 아이디입니다."
        - "아이디는 {}자 이상 {}자 이하로 입력해주세요."
        - "아이디는 영문, 숫자만 입력 가능합니다."

    NicknameSignUpErrors:
      type: string
      enum:
        - '이미 사용중인 닉네임입니다.'
        - '닉네임은 {}자 이상 {}자 이하로 입력해주세요.'
        - '닉네임은 한글, 영문, 숫자만 입력 가능합니다.'
        - '{} 는 사용할 수 없는 닉네임입니다.'

    EmailSignUpErrors:
      type: string
      enum:
        - '이미 가입한 이메일입니다.'
        - '이메일 형식이 올바르지 않습니다.'

    PasswordSignUpErrors:
      type: string
      enum:
        - '비밀번호와 비밀번호 확인이 동일하지 않습니다.'
        - '비밀번호는 {}자 이상 {}자 이하로 입력해주세요.'