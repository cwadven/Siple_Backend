openapi: 3.0.0
info:
  title: API
  version: 1.0.0
  description: API
servers:
  - url: http://127.0.0.1:8000
paths:
  /v1/member/login:
    post:
      tags:
        - Member
      summary: Member login
      description: Normal Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: admin
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDY3OTMzMTJ9.YoSa8QjqZ8jUUhMWHzsNTsrgMt5YmxQuey0vBwTKV6s"
                  refresh_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDczOTA5MTJ9.8l9dcqj63c1RJfE8Bkb2X_eqs4TCn7qcAxI3PvjeqP4"
        '400':
          description: Login failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "아이디 및 비밀번호 정보가 일치하지 않습니다."
              examples:
                bad-username-or-password:
                  value:
                    message: "아이디 및 비밀번호 정보가 일치하지 않습니다."
                mandatory-missing:
                  value:
                    message: "입력값을 다시 확인해주세요."

  /v1/member/social-login:
    post:
      tags:
        - Member
      summary: Member social login
      description: Social Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - provider
                - token
              properties:
                provider:
                  type: integer
                  example: 3
                token:
                  type: string
                  example: "gyYwO9GsLD30O1T7Sg"
      responses:
        '200':
          description: Social login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDY3OTMzMTJ9.YoSa8QjqZ8jUUhMWHzsNTsrgMt5YmxQuey0vBwTKV6s"
                  refresh_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDczOTA5MTJ9.8l9dcqj63c1RJfE8Bkb2X_eqs4TCn7qcAxI3PvjeqP4"
                  is_created:
                    type: boolean
                    example: true
        '400':
          description: Login failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "아이디 및 비밀번호 정보가 일치하지 않습니다."
              examples:
                bad-token:
                  value:
                    message: "소셜 로그인에 발급된 토큰에 문제가 있습니다."
                mandatory-missing:
                  value:
                    message: "입력값을 다시 확인해주세요."

  /v1/member/refresh-token:
    post:
      tags:
        - Member
      summary: Refresh access token
      description: Refreshes the access token using a refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDczOTI1NTZ9.PVuMlaXns3mUW9QYWuD1qa0Et66i1A0RgLby78hs90c"
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDY3OTQ5NTZ9.u9aHwyOhd_7arlbDGgmo-2j9LqKU3WK7VH5P0A6Q5C8"
                  refresh_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6MSwibWVtYmVyX2lkIjoxLCJleHAiOjE3MDczOTI1NTZ9.PVuMlaXns3mUW9QYWuD1qa0Et66i1A0RgLby78hs90c"
        '400':
          description: Bad request - Invalid or missing refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                invalid-token:
                  value:
                    message: "잘못된 리프레시 토큰입니다."
                missing-value:
                  value:
                    message: "입력값을 다시 확인해주세요."

  /v1/member/guest-token:
    post:
      tags:
        - Member
      summary: Generate guest token
      description: Generates a new access token and refresh token for a guest user
      responses:
        '200':
          description: Tokens generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6NCwibWVtYmVyX2lkIjpudWxsLCJleHAiOjE3MDY3OTU0MDJ9.OrdHI8qt6bVx343K6yg5wqmHSfGZ_c_t4GKFPdJ3Khg"
                  refresh_token:
                    type: string
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJndWVzdF9pZCI6NCwibWVtYmVyX2lkIjpudWxsLCJleHAiOjE3MDczOTMwMDJ9.TJw6jktUuwWmgsc1MBmAtNKe15ASsLzJ4pgPNGtQX3g"

  /v1/member/sign-up-validation:
    post:
      tags:
        - Member
      summary: Validate user registration information
      description: Validates the given user registration information for uniqueness and conformity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - nickname
                - password1
                - password2
              properties:
                username:
                  type: string
                  example: "test"
                email:
                  type: string
                  format: email
                  example: "test@naver.com"
                nickname:
                  type: string
                  example: "test"
                password1:
                  type: string
                  example: "testtest"
                password2:
                  type: string
                  example: "testtest"
      responses:
        '200':
          description: Validation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "success"
        '400':
          description: Validation failed - Errors in the provided information
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                multiple_errors:
                  value:
                    username: ["이미 사용중인 아이디입니다."]  # UsernameSignUpErrors
                    email: ["이미 가입한 이메일입니다."]  # EmailSignUpErrors
                    nickname: ["이미 사용중인 닉네임입니다."]  # NicknameSignUpErrors
                    password2: ["비밀번호와 비밀번호 확인이 동일하지 않습니다."]  # PasswordSignUpErrors
                missing-value:
                  value:
                    message: "입력값을 다시 확인해주세요."

  /v1/member/sign-up-check:
    post:
      tags:
        - Member
      summary: Send verification code to email
      description: Validates user input and sends a verification code to the user's email if the input is valid.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - username
                - nickname
                - password2
              properties:
                email:
                  type: string
                  format: email
                  example: "test@naver.com"
                username:
                  type: string
                  example: "username"
                nickname:
                  type: string
                  example: "nickname"
                password2:
                  type: string
                  example: "password2"
      responses:
        '200':
          description: Verification code sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "인증번호를 이메일로 전송했습니다."
        '400':
          description: Error sending verification code or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                send_failure:
                  value:
                    message: "인증번호를 이메일로 전송하지 못했습니다."
                input_error:
                  value:
                    message: "입력값을 다시 확인해주세요."

  /v1/member/sign-up-validate-token:
    post:
      tags:
        - Member
      summary: Validate one-time token for email verification
      description: Validates the one-time token sent to the user's email as part of the registration process.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - one_time_token
              properties:
                email:
                  type: string
                  format: email
                  example: "test@naver.com"
                one_time_token:
                  type: string
                  example: "one_time_token"
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "회원가입에 성공했습니다."
        '400':
          description: Validation error or registration failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                input_error:
                  value:
                    message: "입력값을 다시 확인해주세요."
                request_new_token:
                  value:
                    message: "이메일 인증번호를 다시 요청하세요."
                incorrect_token:
                  value:
                    message: "인증번호가 다릅니다."
                username_exists:
                  value:
                    message: "이미 사용중인 아이디입니다."
                nickname_exists:
                  value:
                    message: "이미 사용중인 닉네임입니다."
                email_registered:
                  value:
                    message: "이미 가입한 이메일입니다."
                token_attempts_exceeded:
                  value:
                    message: "{}회 이상 인증번호를 틀리셨습니다. 현 이메일은 {}시간 동안 인증할 수 없습니다."

components:
  schemas:
    UsernameSignUpErrors:
      type: string
      enum:
        - "이미 사용중인 아이디입니다."
        - "아이디는 {}자 이상 {}자 이하로 입력해주세요."
        - "아이디는 영문, 숫자만 입력 가능합니다."

    NicknameSignUpErrors:
      type: string
      enum:
        - '이미 사용중인 닉네임입니다.'
        - '닉네임은 {}자 이상 {}자 이하로 입력해주세요.'
        - '닉네임은 한글, 영문, 숫자만 입력 가능합니다.'
        - '{} 는 사용할 수 없는 닉네임입니다.'

    EmailSignUpErrors:
      type: string
      enum:
        - '이미 가입한 이메일입니다.'
        - '이메일 형식이 올바르지 않습니다.'

    PasswordSignUpErrors:
      type: string
      enum:
        - '비밀번호와 비밀번호 확인이 동일하지 않습니다.'
        - '비밀번호는 {}자 이상 {}자 이하로 입력해주세요.'
