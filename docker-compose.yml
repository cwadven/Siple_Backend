# docker-compose.yml

version: '3.8'
services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"

  web:
    build: .
    # After the build, DB the entrypoint.sh file will be executed
    entrypoint: /etc/entrypoint/entrypoint.sh
    command: >
      sh -c "python manage.py migrate && 
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production

  cron:
    build: .
    volumes:
      - .:/app
      - cron_log:/tmp
    depends_on:
      - web
    command: >
      sh -c "cat /etc/cron.d/command.cron | crontab - &&
             service cron start &&
             tail -f /dev/null"
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production

  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    volumes:
      - .:/app
    ports:
      - "80:80"
    depends_on:
      - web

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - CELERY_BROKER_URL=redis://redis:6379/2

  flower:
    build: .
    image: mher/flower
    command: celery -A config flower --address=0.0.0.0 --port=5555
    volumes:
      - .:/app
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production

volumes:
  postgres_data:
  cron_log: